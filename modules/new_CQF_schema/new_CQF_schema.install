<?php

function new_CQF_schema_schema(){
	$schema['sql_subquery_related']=array(
		'description' => 'The relation between SQL query and subquery',
		'fields' => array(
				'id' => array(
						'description' => 'Primary Key for this Relation',
						'type' => 'serial',
						'unsigned' => TRUE,
						'not null' => TRUE,
						),
				'sql_id' => array(
						'type' => 'int',
						'not null' => TRUE,
						'description' => 'The {node}.nid of SQL',
						),
				'subquery_id' => array(
						'type' => 'int',
						'not null' => TRUE,
						'description' => 'The {node}.nid of subquery',
						),
				'subquery_nick_name'=>array(
						'type'=> 'varchar',
						'length'=>40,
						'not null'=>TRUE,
						'description'=>'user defined table name for a subquery',
						),
				'score' =>array(
					'type'=>'int',
					'description'=>'score of the query returned by the voting api.',
					),
				),
		'primary key' => array('id'),
		'foreign keys' => array(
			'subquery_info' => array(
				'table' => 'node',
				'columns' => array('subquery_id' => 'nid'),
				),
			'sql_info' => array(
				'table' => 'node',
				'columns' => array('sql_id' => 'nid'),
				),
			),
	);


/*	$schema['children'] = array(
		'description' => 'The children relation for nodes',
		'fields' => array(
				'id' => array(
						'description' => 'Primary Key for this Relation',
						'type' => 'serial',
						'unsigned' => TRUE,
						'not null' => TRUE,
						),
				'parent_id' => array(
						'type' => 'int',
						'not null' => TRUE,
						'description' => 'The {node}.nid of parent',
						),
				'child_id' => array(
						'type' => 'int',
						'not null' => TRUE,
						'description' => 'The {node}.nid of child',
						),
				),
		'indexes' => array(
			'children_parent_id' => array('parent_id'),
			'children_child_id' => array('child_id'),
			'children_parent_id_child_id' => array('parent_id', 'child_id'),
				),
		'primary key' => array('id'),
		'foreign keys' => array(
			'children_parent' => array(
				'table' => 'node',
				'columns' => array('parent_id' => 'nid'),
				),
			'children_child' => array(
				'table' => 'node',
				'columns' => array('child_id' => 'nid'),
				),
			),
		);
		
//	  db_create_table('children', $schema['children']);  // DON'T DO THIS!


		$schema['related'] = array(
			'description' => 'The related relation for nodes',
				'fields' => array(
					'id' => array(
						'description' => 'Primary Key for this Relation',
						'type' => 'serial',
						'unsigned' => TRUE,
						'not null' => TRUE,
					),
				'from_id' => array(
					'type' => 'int',
					'not null' => TRUE,
					'description' => 'The {node}.nid of A (if A is related to B)',
					),
				'to_id' => array(
					'type' => 'int',
					'not null' => TRUE,
					'description' => 'The {node}.nid of B (if A is related to B)',
					),
				),
			'indexes' => array(
				'related_from_id' => array('from_id'),
				'related_to_id' => array('to_id'),
				'related_from_id_to_id' => array('from_id', 'to_id'),
				),
			'primary key' => array('id'),
			'foreign keys' => array(
				'related_from' => array(
				'table' => 'node',
				'columns' => array('from_id' => 'nid'),
			),
			'related_to' => array(
				'table' => 'node',
				'columns' => array('to_id' => 'nid'),
			),
		),
		);
//	  db_create_table('related', $schema['related']);  // DON'T DO THIS!*/

	return $schema;
}

function new_CQF_sql_install() {
    drupal_install_schema('sql_subquery_related');
}
function new_CQF_sql_uninstall() {
    drupal_uninstall_schema('sql_subquery_related');
}

?>
